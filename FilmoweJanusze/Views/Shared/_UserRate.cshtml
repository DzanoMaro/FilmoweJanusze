@model FilmoweJanusze.Models.UserRate

@{
    string formAction = "";
    string submitCaption = "";
    string ratename = "";

    if (Model.UserID == null)
    {
        formAction = "Create";
        submitCaption = "Zapisz";
    }
    else
    {
        formAction = "Edit";
        submitCaption = "Zmień";
    }

    if (ViewBag.Controller == "Movies")
    {
        ratename = "Ocena filmu:";
    }
    if (ViewBag.Controller == "People")
    {
        ratename = "Ocena postaci:";
    }

    string[] star_titles = { "Zły", "Słaby", "Średni", "Dobry", "Bardzo dobry", "Wyśmienity!" };
}

<!-- OCENA FILMU -->
<div class="rating">
    @if (ViewBag.Rate!=null)
    {
    <div>
        <h6 class="ratecount">Liczba głosów: @ViewBag.RateCount</h6>
        <h4>
            @ratename
            @ViewBag.Rate <span class="glyphicon glyphicon-star"></span> / 6 <span class="glyphicon glyphicon-star"></span>
        </h4>

    </div>
    }
    else
    {
        <div>
            <h4>
                Jeszcze nikt nie ocenił!
                <br />
                Bądź pierwszy!
            </h4>
        </div>
    }

    <!-- FORMULARZ -->
    @if (!String.IsNullOrEmpty(ViewBag.UserID) && (User.IsInRole("User") || User.IsInRole("Admin")))
    {

        <div>
            @using (Html.BeginForm(formAction, "UserRate", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(ur => ur.UserRateID)
                @Html.HiddenFor(ur => ur.MovieID)
                @Html.HiddenFor(ur => ur.PeopleID)
                @Html.HiddenFor(ur => ur.UserID, new { Value = ViewBag.UserID })
                @Html.HiddenFor(ur => ur.Rate)
                <div>
                    @Html.LabelFor(ur => ur.Rate)
                    <!--
                    Html.DropDownList("Rate", Enumerable.Range(1, 6).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), "Brak oceny")
                    -->
                    <div class="radio-inline">
                        @for (int i = 0; i < star_titles.Length; i++)
                        {
                            <label onclick="SetStar(@(i+1))" data-toggle="tooltip" title="@star_titles[i]"><input type="radio" name="RadioRate" value=@(i+1) class="hide" /><i class="glyphicon glyphicon-star-empty star-rating"></i></label>
                        }
                        <button class="close" type="submit" onclick="SetStar(0)" style="color:white">&times;</button>
                    </div>
                </div>

                <div>
                    @Html.EditorFor(ur => ur.Comment, new { htmlAttributes = new { placeholder = "Twój komentarz", @class = "form-control" } })
                </div>

                <input type="submit" value=@submitCaption class="btn btn-default" />
            }
        </div>
    }
    else
    {
        <div id="NotLoggedIn">
            @if (String.IsNullOrEmpty(ViewBag.UserID))
            {
                <div>Zaloguj sie,</div>
            }
            else
            {
                <div>
                    Dokończ rejestrację konta, <br />
                    potwierdź adres e-mail, <br />
                    uzupełnij informacje profilowe,
                </div>
            }
            by móc oceniać i komentować filmy!
        </div>
    }
</div>
<div style="max-height:280px; overflow:auto;">

</div>

