@model FilmoweJanusze.Models.People
@using FilmoweJanusze.Helpers

@{
    ViewBag.Title = Model.FullName;

    string coll_biography_in = null;
    string coll_cast_in = null;
    string coll_director_in = null;
    string coll_gallery_in = null;
    string deleteclass = null;

    string GalleryTitle = Html.DisplayNameFor(model => model.Photos) + " (" + ViewBag.PhotoCount + ")";

    if (!String.IsNullOrEmpty(Model.PeopleInfo.Biography))
    {
        coll_biography_in = "in";
    }

    if (Model.Roles.Count > 0)
    {
        coll_cast_in = "in";
    }

    if (Model.DirectedMovies.Count > 0)
    {
        coll_director_in = "in";
    }

    if (Model.Photos.Count > 0)
    {
        coll_gallery_in = "in";
    }

    if (!User.IsInRole("Admin"))
    {
        deleteclass = "disabled";
    }

    var LoggedInUserRate = Model.UserRates.Where(m => m.UserID == ViewBag.UserID).FirstOrDefault();
    if (LoggedInUserRate == null)
    {
        LoggedInUserRate = new FilmoweJanusze.Models.UserRate();
        LoggedInUserRate.MovieID = null;
        LoggedInUserRate.PeopleID = Model.PeopleID;
    }
}

<!--NAGŁÓWEK-->
@using (Html.BeginHeader(Model.FullName))
{
    @Helper.AutohorizeDropDownBtn(
    new[] {
        Html.ActionLink("Edytuj", "Edit", new { id = Model.PeopleID }),
        Html.ActionLink("Usuń", "Delete", new { id = Model.PeopleID }, new { data_toggle = "tooltip", title = "Tylko admin może usuwać filmy!" , @class=deleteclass})
    })
}

<!--DANE PERSONALNE-->
<div class="movieinfo">

    <!--ZDJECIE-->
    <div class="col-xs-12 col-sm-6 col-md-4">
        @Html.Image(Model.PhotoURL, Url.Action("Details", "People", new { id = Model.PeopleID }), new { @class = "poster img-responsive img-thumbnail" })
    </div>

    <!--DANE-->
    <div class="col-xs-12 col-sm-6 col-md-4 col-lg-5 nopadding">
        <dl class="dl-horizontal">
            @if (!String.IsNullOrEmpty(Model.FirstName))
            {
                <dt>@Html.DisplayNameFor(model => model.FirstName)</dt>
                <dd>@Html.DisplayFor(model => model.FirstName)</dd>
            }

            @if (!String.IsNullOrEmpty(Model.LastName))
            {
                <dt>@Html.DisplayNameFor(model => model.LastName)</dt>
                <dd>@Html.DisplayFor(model => model.LastName)</dd>
            }

            @if (Model.Birthdate != null)
            {
                <dt>@Html.DisplayNameFor(model => model.Birthdate)</dt>
                <dd>
                    @Html.DisplayFor(model => model.Birthdate)
                    @if (!String.IsNullOrEmpty(Model.Age))
                    {
                        @:(@Html.DisplayFor(model => model.Age))
                    }
                </dd>
            }

            @if (!String.IsNullOrEmpty(Model.PeopleInfo.Birthplace))
            {
                <dt>@Html.DisplayNameFor(model => model.PeopleInfo.Birthplace)</dt>
                <dd>@Html.DisplayFor(model => model.PeopleInfo.Birthplace)</dd>
            }

            @if (Model.PeopleInfo.Height != null && Model.PeopleInfo.Height > 50)
            {
                <dt>@Html.DisplayNameFor(model => model.PeopleInfo.Height)</dt>
                <dd>@Html.DisplayFor(model => model.PeopleInfo.Height)</dd>
            }
        </dl>

        <!--BIOGRAFIA-->
        <div class="describe">
            @using (Html.BeginPanel(Html.DisplayNameFor(model => model.PeopleInfo.Biography).ToString(), "coll_description", coll_biography_in))
            {
                <div class="padding10">
                    @Html.DisplayFor(model => model.PeopleInfo.Biography)
                </div>
            }
        </div>

    </div>

    <!--OCENY-->
    <div class="col-xs-5 col-md-4 col-lg-3 nopadding">
        @Html.Partial("UserRatePartial", LoggedInUserRate)
    </div>
    <div class="clearfix"></div>
</div>

<!--GALERIA-->
@using (Html.BeginPanel(GalleryTitle, "coll_gallery", coll_gallery_in))
{
    if (Model.Photos.Count > 0)
    {
        <div class="col-xs-12 nopadding">
            @foreach (var photo in Model.Photos)
            {
                <div class="col-xs-4 col-md-2 nopadding">
                    @Html.Image(photo.PhotoURL, Url.Action("Details", "Photo", new { peopleID = Model.PeopleID, photoID = photo.PhotoID }), new { @class = "gallerythumb img-thumbnail", data_toggle = "tooltip", title = photo.Description })
                </div>
            }
        </div>
        @Html.ActionLink("Zobacz całą galerię", "Index", "Photo", new { peopleID = Model.PeopleID }, new { @class = "btn btn-default margin10", style = "float:right" })
    }
    else
    {
        <div class="padding10">
            Nie dodano żadnych zdjęć :(
        </div>
    }
}

<!--ROLE FILMOWE-->
@if (Model.Proffesion.Actor == true)
{
    using (Html.BeginPanel("Gra aktorska", "coll_cast", coll_cast_in, Helper.AutohorizeDropDownBtn(null, null, "UnHide()", Model.Roles.Count > 0 ? true : false)))
    {
        if (Model.Roles.Count != 0)
        {
            bool first = true;
            int lastproductionyear = 0;
            foreach (var cast in Model.Roles)
            {
                <div class="cast container-fluid">
                    <div class="col-xs-12 col-sm-1 col-sm-offset-1 col-lg-offset-1">
                        @if (lastproductionyear != cast.Movie.ProductionYear)
                        {
                            @cast.Movie.ProductionYear
                            lastproductionyear = cast.Movie.ProductionYear;
                        }
                    </div>
                    <div class="col-xs-6 col-sm-2 col-lg-3">
                        @Html.Image(cast.Movie.PhotoURL, Url.Action("Details", "Movies", new { id = cast.MovieID }), new { @class = "img-responsive postermin" })
                    </div>
                    <div class="col-xs-6 col-sm-2">
                        @Html.ActionLink(Html.DisplayFor(modelItem => cast.Movie.Title).ToString(), "Details", "Movies", new { id = cast.MovieID }, null)
                        <br />
                        @Html.DisplayFor(modelitem => cast.Movie.TitlePL)
                    </div>
                    <div class="col-xs-6 col-sm-1">
                        @if (first == true)
                        {
                            @:jako:
                            first = false;
                        }
                    </div>
                    <div class="col-xs-6 col-sm-2">
                        @Html.DisplayFor(modelitem => cast.RoleName)
                        @if (cast.Dubbing == true)
                        {
                            <br />
                            @:(dubbing)
                        }
                    </div>
                    <!--
                                    <div class="poster col-xs-2">
                                        ZDJECIE ROLI
                    <img class="img-responsive poster" src="~/Images/Brak_zdjecia.png" />
                                    </div>-->
                    <div class="col-xs-6 col-sm-3 col-lg-2" name="editcast" style="display:none">
                        @Html.ActionLink("Edytuj", "Edit", "ActorRoles", new { id = cast.ActorRoleID, ispeople = true }, new { @class = "btn btn-default" })
                        @Html.ActionLink("Usuń", "Delete", "ActorRoles", new { id = cast.ActorRoleID, ispeople = true }, new { data_toggle = "tooltip", title = "Tylko moderator może usuwać role!", @class = @deleteclass + " btn btn-default" })
                    </div>
                </div>
            }
        }
        else
        {
            <div class="padding10">
                Brak występów w filmach :(
            </div>
        }
        if (User.IsInRole("User") || User.IsInRole("Admin"))
        {
            @Html.ActionLink("Dodaj członka obsady", "Create", "ActorRoles", new { peopleID = Model.PeopleID }, new { @class = "btn btn-default margin10", style = "float:right" })
        }
    }
}

<!--REŻYSERKA-->

@if (Model.Proffesion.Director == true)
{
    using (Html.BeginPanel("Reżyseria", "coll_dir", coll_director_in))
    {
        if (Model.DirectedMovies.Count != 0)
        {
            foreach (var movie in Model.DirectedMovies)
            {
                @Html.Partial("_Tile", movie)
            }
        }
        else
        {
            <div class="padding10">
                Brak wyreżyserowanych filmów :(
            </div>
        }
    }
}

<button class="btn btn-default">
    @Html.ActionLink("Powrót", "Index", null, new { @class = "nodecoration" })
</button>

@section scripts {
    @Scripts.Render("~/bundles/StarRating")
}
